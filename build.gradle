buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.3.0.RELEASE'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RELEASE")
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

ext {

    ext {
        camelVersion = '2.15.0'
        MQ_JAVA_LIB_DIR = System.getenv()['MQ_JAVA_INSTALL_PATH'] + '/lib'
        MQ_JAVA_JRE_LIB_DIR = System.getenv()['MQ_JAVA_INSTALL_PATH'] + '/jre/lib'
        MQSI_CLASSES = System.getenv()['MQSI_HOME'] + '/classes'
    }
}

jar {
    baseName = 'mqsieventcollector'
    version = '0.1.1'
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:1.1.1.RELEASE'
    }
}

dependencies {

    runtime("org.jolokia:jolokia-core")

    compile "org.codehaus.groovy:groovy-all"
    compile 'commons-cli:commons-cli'
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-core"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-log4j")
    compile "org.apache.camel:camel-spring-boot:$camelVersion"
    compile "org.apache.camel:camel-groovy:$camelVersion"
    compile "org.apache.camel:camel-jms:$camelVersion"
    compile 'joda-time:joda-time'
    //WMQ
    compile fileTree(dir: MQ_JAVA_LIB_DIR, include: '*.jar')
    compile fileTree(dir: MQ_JAVA_JRE_LIB_DIR, include: 'ibmjsseprovider2.jar')
    compile fileTree(dir: MQSI_CLASSES, include: 'ConfigManagerProxy.jar')

    //test
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile "org.spockframework:spock-core"
    testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    //all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    // all*.exclude module: 'commons-logging' // we use slf4j instead
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}